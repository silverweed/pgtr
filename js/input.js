// Generated by IcedCoffeeScript 108.0.11

/*
	Event Listeners
 */

(function() {
  'use strict';
  var Input, hdKey, resizeHandler;

  Input = {};

  hdKey = function(down) {
    return function(e) {
      var key, val, _ref;
      _ref = CONF.CONTROLS;
      for (key in _ref) {
        val = _ref[key];
        if (e.keyCode == val) {
          l("setting Input[" + key + "]");
          Input[key] = down;
          return;
        }
      }
    };
  };

  resizeHandler = function(camera, controls, renderer) {
    return function() {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      return renderer.setSize(window.innerWidth, window.innerHeight);
    };
  };

  window.createPostProcessControls = function(world) {
    return window.addEventListener('keyup', function(e) {
      if (e.keyCode == CONF.CONTROLS.togglePostProcess) {
        world.postprocess.enabled = !world.postprocess.enabled;
        world.renderer.clear();
      }
      l("Postprocessing is now " + world.postprocess.enabled);
      return true;
    });
  };

  window.addEventListener('keydown', hdKey(true), false);

  window.addEventListener('keyup', hdKey(false), false);

  window.Input = Input;

  window.resizeHandler = resizeHandler;

}).call(this);
