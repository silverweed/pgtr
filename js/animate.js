// Generated by IcedCoffeeScript 108.0.11

/*
	Functions used for rendering the scene
 */

(function() {
  'use strict';
  var renderLoop;

  renderLoop = function(opts) {
    var animate;
    animate = function() {
      var delta, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
      if ((_ref = opts.stats) != null) {
        _ref.begin();
      }
      requestAnimationFrame(animate);
      delta = opts.clock.getDelta();
      if ((_ref1 = opts.entities) != null) {
        if ((_ref2 = _ref1.player()) != null) {
          _ref2.update(delta);
        }
      }
      if ((_ref3 = opts.debug) != null) {
        _ref3.forEach(function(e) {
          return ((e != null ? e.update : void 0) != null) && e.update(delta);
        });
      }
      opts.water.material.uniforms.time.value += delta;
      if (opts.physics.enabled) {
        opts.physics.step(delta, CONF.PHYSICS.SUBSTEPS);
      }
      opts.water.render();
      if ((_ref4 = opts.postprocess) != null ? _ref4.enabled : void 0) {
        opts.postprocess.composer.render(delta);
      } else {
        opts.renderer.render(opts.scene, opts.camera);
      }
      return (_ref5 = opts.stats) != null ? _ref5.end() : void 0;
    };
    animate();
    return null;
  };

  window.renderLoop = renderLoop;

}).call(this);
